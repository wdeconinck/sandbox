sudo: false

language: cpp


# Workaround for https://github.com/travis-ci/travis-ci/issues/4681
matrix:
  - TRAVIS_EMPTY_JOB_WORKAROUND=true

addons:
  apt:
    sources:
      - llvm-toolchain-precise
      - ubuntu-toolchain-r-test
    packages:
      - clang-3.8
      - gfortran

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/openmpi
    - ${TRAVIS_BUILD_DIR}/deps/mpich
    - ${TRAVIS_BUILD_DIR}/deps/eckit
    - ${TRAVIS_BUILD_DIR}/deps/fckit

matrix:
  exclude:

    - env: TRAVIS_EMPTY_JOB_WORKAROUND

  include:

    # - os: linux
    #   compiler: clang
    #   env: CXX_COMPILER='clang++-3.8' C_COMPILER='clang-3.8' Fortran_COMPILER='gfortran' MPI='mpich'

    # - os: linux
    #   compiler: clang
    #   env: CXX_COMPILER='clang++-3.8' C_COMPILER='clang-3.8' Fortran_COMPILER='gfortran' MPI='openmpi'

    - os: osx
      env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' MPI=openmpi
      osx_image: xcode9

install:

  #################################################################
  # Install Fortran
  #################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      brew outdated gcc || brew upgrade gcc
    fi
    gfortran --version

  #################################################################
  # Set compilers
  #################################################################
  - |
    export CC=${C_COMPILER}
    export CXX=${CXX_COMPILER}
    export FC=${Fortran_COMPILER}

  #################################################################
  # All dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  #################################################################
  - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  #################################################################
  # Install MPI
  #################################################################
  - |
    ${TRAVIS_BUILD_DIR}/install-mpi.sh ${MPI}
    export MPI_HOME=${DEPS_DIR}/${MPI}
    export PATH=${MPI_HOME}/bin:${PATH}

  #################################################################
  # Install CMake
  #################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

  #################################################################
  # Install ecbuild
  #################################################################
  - |
    git clone -b master https://github.com/ecmwf/ecbuild ${DEPS_DIR}/ecbuild
    export PATH=${DEPS_DIR}/ecbuild/bin:${PATH}

  #################################################################
  # Install eckit
  #################################################################
  - |
    export ECKIT_PATH=${DEPS_DIR}/eckit
    if [[ -z "$(ls -A ${ECKIT_PATH})" ]]; then
      ECKIT_SOURCE_DIR=${TRAVIS_BUILD_DIR}/downloads/eckit
      ECKIT_BUILD_DIR=${TRAVIS_BUILD_DIR}/builds/eckit
      git clone -b master https://github.com/ecmwf/eckit ${ECKIT_SOURCE_DIR}
      mkdir -p ${ECKIT_BUILD_DIR} && cd ${ECKIT_BUILD_DIR}
      ecbuild --build=debug --prefix=${ECKIT_PATH} -- -DENABLE_TESTS=OFF ${ECKIT_SOURCE_DIR}
      make -j8 install
    fi

  #################################################################
  # Install fckit
  #################################################################
  - |
    export FCKIT_PATH=${DEPS_DIR}/fckit
    if [[ -z "$(ls -A ${FCKIT_PATH})" ]]; then
      FCKIT_SOURCE_DIR=${TRAVIS_BUILD_DIR}/downloads/fckit
      FCKIT_BUILD_DIR=${TRAVIS_BUILD_DIR}/builds/fckit
      git clone -b master https://github.com/ecmwf/fckit ${FCKIT_SOURCE_DIR}
      mkdir -p ${FCKIT_BUILD_DIR} && cd ${FCKIT_BUILD_DIR}
      ecbuild --build=debug --prefix=${FCKIT_PATH} -- -DENABLE_TESTS=OFF ${FCKIT_SOURCE_DIR}
      make -j8 install
    fi

  - cd ${TRAVIS_BUILD_DIR}

script:

  - |
    $FC  --version
    $CC  --version
    $CXX --version
    which mpirun
    which mpiexec

  - |
    ATLAS_SOURCE_DIR=${TRAVIS_BUILD_DIR}/downloads/atlas
    ATLAS_BUILD_DIR=${TRAVIS_BUILD_DIR}/builds/atlas

  #################################################################
  # Download Atlas
  #################################################################
  - git clone -b master https://github.com/ecmwf/atlas ${ATLAS_SOURCE_DIR}

  #################################################################
  # Build Atlas
  #################################################################
  - mkdir -p ${ATLAS_BUILD_DIR} && cd ${ATLAS_BUILD_DIR}
  - ecbuild --build=debug -- -DMPIEXEC=$(which mpirun) ${ATLAS_SOURCE_DIR}
  - make -j8
  - bin/atlas --info

  #################################################################
  # Test Atlas
  #################################################################
  - ctest

after_failure:

  - cd ${ATLAS_BUILD_DIR}
  - ctest -VV --rerun-failed
  - cat ecbuild.log
